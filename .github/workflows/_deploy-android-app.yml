name: Deploy To App Distribution

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

jobs:
  build_deploy_android:
    name: Build Flutter (Android)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'


      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json


  build_ios:
    name: Build Flutter (iOS)
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash

      - name: Log in to Firebase
        run: |
          echo "${{secrets.FIREBASE_TOKEN}}" | firebase login --interactive --no-localhost

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'

      - run: flutter clean
      - name: Install Dependencies
        run: flutter pub get

      - name: Build iOS app
        run: flutter build ios --release --no-codesign

      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      - name: Upload to Firebase Distribution
        run: |
          firebase appdistribution:distribute "build/ios/RunnerExport/Runner.ipa" --token "${{secrets.FIREBASE_TOKEN}}" --app "${{secrets.FIREBASE_APP_ID_IOS}}" --groups 'testers'





